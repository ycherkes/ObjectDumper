<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <IlRepackImported>true</IlRepackImported>
  </PropertyGroup>
  <Import Project="$(NuGetPackageRoot)ILRepack\2.0.18\build\ILRepack.props" Condition="Exists('$(NuGetPackageRoot)ILRepack\2.0.18\build\ILRepack.props') And '$(IlRepackImported)' == ''" />
  <PropertyGroup>
    <TargetFrameworks>net461;netstandard2.0;netcoreapp2.0;netcoreapp3.1;net6.0</TargetFrameworks>
    <LangVersion>latest</LangVersion>
    <AssemblyName>YellowFlavor.Serialization</AssemblyName>
    <AssemblyVersion>0.0.0.88</AssemblyVersion>
    <FileVersion>0.0.0.88</FileVersion>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <RootNamespace>YellowFlavor.$(MSBuildProjectName.Replace(" ", "_"))</RootNamespace>
	<CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
  </PropertyGroup>
	
  <ItemGroup>
    <InternalsVisibleTo Include="Serialization.UnitTests" />
	<InternalsVisibleTo Include="Serialization.UnitTests.FSharp" />
  </ItemGroup>
  
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <DefineConstants>$(DefineConstants)TRACE;HAVE_FULL_REFLECTION;CODEDOM</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <DefineConstants>$(DefineConstants)TRACE;HAVE_FULL_REFLECTION;CODEDOM</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition="'$(TargetFramework)'=='net461'">
    <AssemblyTitle>YellowFlavor.Serialization .NET 4.6.1</AssemblyTitle>
  </PropertyGroup>

  <PropertyGroup Condition="'$(TargetFramework)'=='netcoreapp3.1'">
    <AssemblyTitle>YellowFlavor.Serialization Core 3.1</AssemblyTitle>
  </PropertyGroup>
  
  <PropertyGroup Condition="'$(TargetFramework)'=='net6.0'">
    <AssemblyTitle>YellowFlavor.Serialization NET 6.0</AssemblyTitle>
  </PropertyGroup>

  <PropertyGroup Condition="'$(TargetFramework)' == 'netstandard2.0'">
    <AssemblyTitle>YellowFlavor.Serialization Standard 2.0</AssemblyTitle>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
    <PackageReference Include="VarDump" Version="0.2.5" />
    <PackageReference Include="YamlDotNet" Version="13.1.1" />
    <PackageReference Include="ILRepack" Version="2.0.18" PrivateAssets="All" />
    <PackageReference Include="YAXLib" Version="4.2.0" />
  </ItemGroup>

  <ItemGroup>
    <Compile Update="Embedded.CodeDom\ms\Resources\SR.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>SR.resx</DependentUpon>
    </Compile>
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Update="Embedded.CodeDom\ms\Resources\SR.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>SR.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>
  
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
  	<PropertyGroup>
  		<ErrorText>This project references NuGet package(s) that are missing on this computer. Enable NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
  	</PropertyGroup>
  	<Error Condition="!Exists('$(NuGetPackageRoot)ILRepack\2.0.18\build\ILRepack.props')" Text="$([System.String]::Format('$(ErrorText)', '$(NuGetPackageRoot)ILRepack\2.0.18\build\ILRepack.props'))" />
  </Target>
  <Target Name="Merge libs" AfterTargets="PostBuildEvent" Condition="'$(Configuration)' == 'Release'">
  	<ItemGroup>
  		<MergeAssemblies Include="$(OutputPath)\*.dll" Exclude="$(OutputPath)\$(AssemblyName).dll" />
  		<RootAssembly Include="$(OutputPath)\$(AssemblyName).dll" />
  	</ItemGroup>
  	<PropertyGroup>
  		<OutputAssembly>$(OutputPath)\$(AssemblyName).dll</OutputAssembly>
  		<Merger>"$(NuGetPackageRoot)ILRepack\2.0.18\tools\ILRepack.exe"</Merger>
  	</PropertyGroup>
  	<Message Text="MERGING: @(MergeAssemblies->'%(Filename)') into $(OutputAssembly)" Importance="High" />
  	<Exec Command="$(Merger) /ndebug /ver:$(AssemblyVersion) /internalize:InternalizeExclusions.txt /renameInternalized /targetplatform:v4 /wildcards /out:&quot;$(OutputAssembly)&quot; @(RootAssembly->'&quot;%(FullPath)&quot;', ' ') @(MergeAssemblies->'&quot;%(FullPath)&quot;', ' ')" />
  	<Delete Files="@(ReferenceCopyLocalPaths->'$(OutDir)%(DestinationSubDirectory)%(Filename)%(Extension)')" />
  </Target>
</Project>
